/*
 * Name: Jinsoo Choi
 * NetID: jinsoo89
 */

import java.sql.Date;
import java.sql.ResultSet;
import javax.swing.*;

/*
 * Main frame for Graphic User Interface
 */
public class IISystemFrame extends JFrame {

    // Main model to use
    public IISystem iis;

    /**
     * Creates new form IISystemFrame
     */
    public IISystemFrame(IISystem iis) {
        initComponents();
        this.iis = iis;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        mainLabel = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        FIRST = new javax.swing.JLabel();
        first = new javax.swing.JTextField();
        LAST = new javax.swing.JLabel();
        last = new javax.swing.JTextField();
        DOB = new javax.swing.JLabel();
        dob = new javax.swing.JTextField();
        SEX = new javax.swing.JLabel();
        sex = new javax.swing.JTextField();
        MALARIA = new javax.swing.JLabel();
        malaria = new javax.swing.JTextField();
        MEASLES = new javax.swing.JLabel();
        measles = new javax.swing.JTextField();
        DPT = new javax.swing.JLabel();
        dpt = new javax.swing.JTextField();
        NEXTSCHEDULE = new javax.swing.JLabel();
        next = new javax.swing.JTextField();
        rightPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList<>();
        bottomPanel = new javax.swing.JPanel();
        regiButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        searchOption = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(600, 450));
        setMinimumSize(new java.awt.Dimension(600, 450));
        setPreferredSize(new java.awt.Dimension(600, 450));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 450));

        mainLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        mainLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        mainLabel.setText("Immunization Information System");
        mainLabel.setToolTipText("");
        mainLabel.setName(""); // NOI18N

        leftPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Personal Info"));
        leftPanel.setAlignmentX(0.0F);
        leftPanel.setPreferredSize(new java.awt.Dimension(250, 400));
        leftPanel.setSize(new java.awt.Dimension(100, 100));

        FIRST.setText("FIRST");
        FIRST.setMinimumSize(new java.awt.Dimension(10, 30));

        first.setToolTipText("ex) Choi, CHOI, choi");
        first.setMinimumSize(new java.awt.Dimension(10, 30));

        LAST.setText("LAST");
        LAST.setMinimumSize(new java.awt.Dimension(10, 30));

        last.setToolTipText("ex) Jinsoo, JINSOO, jinsoo");
        last.setMinimumSize(new java.awt.Dimension(10, 30));

        DOB.setText("DOB");
        DOB.setMinimumSize(new java.awt.Dimension(10, 30));

        dob.setToolTipText("ex) 1989-05-04");
        dob.setMinimumSize(new java.awt.Dimension(10, 30));

        SEX.setText("SEX");
        SEX.setMinimumSize(new java.awt.Dimension(10, 30));

        sex.setToolTipText("M for male, F for female");
        sex.setMinimumSize(new java.awt.Dimension(10, 30));

        MALARIA.setText("MALARIA");
        MALARIA.setMinimumSize(new java.awt.Dimension(10, 30));

        malaria.setToolTipText("1 if complete 0 otherwise");
        malaria.setMinimumSize(new java.awt.Dimension(10, 30));

        MEASLES.setText("MEASLES");
        MEASLES.setMinimumSize(new java.awt.Dimension(10, 30));

        measles.setToolTipText("1 if complete 0 otherwise");
        measles.setMinimumSize(new java.awt.Dimension(10, 30));

        DPT.setText("DPT");
        DPT.setMinimumSize(new java.awt.Dimension(10, 30));

        dpt.setToolTipText("1 if complete 0 otherwise");
        dpt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        dpt.setMinimumSize(new java.awt.Dimension(10, 30));

        NEXTSCHEDULE.setText("Next Schedule");
        NEXTSCHEDULE.setMinimumSize(new java.awt.Dimension(10, 30));

        next.setToolTipText("ex) 2018-10-31");
        next.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        next.setMinimumSize(new java.awt.Dimension(10, 30));

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
                leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(leftPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(leftPanelLayout.createSequentialGroup()
                                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(FIRST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(LAST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(DOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(SEX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(MALARIA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(MEASLES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(DPT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(39, 39, 39)
                                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(last, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(dob, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(sex, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(malaria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(measles, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(dpt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(first, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(leftPanelLayout.createSequentialGroup()
                                                .addComponent(NEXTSCHEDULE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
                leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(leftPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(first, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(FIRST, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(last, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(LAST, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(DOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(sex, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(SEX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(malaria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(MALARIA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(measles, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(MEASLES, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(dpt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(DPT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(next, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(NEXTSCHEDULE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );

        rightPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Group Info"));
        rightPanel.setAlignmentX(0.0F);
        rightPanel.setBounds(new java.awt.Rectangle(0, 0, 100, 100));

        jScrollPane1.setViewportView(resultList);

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
                rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rightPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                                .addContainerGap())
        );
        rightPanelLayout.setVerticalGroup(
                rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rightPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                                .addContainerGap())
        );

        bottomPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Control"));

        regiButton.setText("REGISTER");
        regiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    regiButtonActionPerformed(evt);
                } catch (Exception e) {

                }
            }
        });

        updateButton.setText("UPDATE");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    updateButtonActionPerformed(evt);
                } catch (Exception e) {

                }
            }
        });

        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    searchButtonActionPerformed(evt);
                } catch (Exception e) {

                }
            }
        });

        searchOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PERSON", "OVERDUE", "INCOMPLETE MALARIA", "INCOMPLETE MEASLES", "INCOMPLETE DPT"}));

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
                bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(regiButton)
                                .addGap(30, 30, 30)
                                .addComponent(updateButton)
                                .addGap(32, 32, 32)
                                .addComponent(searchButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        bottomPanelLayout.setVerticalGroup(
                bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(bottomPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchButton)
                                        .addComponent(regiButton)
                                        .addComponent(searchOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(updateButton))
                                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(mainLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(bottomPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(mainLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(leftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                                        .addComponent(rightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        leftPanel.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>

    // clear all textfield
    private void clearPerson() {
        first.setText("");
        last.setText("");
        sex.setText("");
        dob.setText("");
        measles.setText("");
        malaria.setText("");
        dpt.setText("");
        next.setText("");
    }

    /*
     * Take user input in Text-Field and call register function
     * To execute the register query
     */
    private void regiButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here
        try {
            // get all text input from Graphic User Interface
            String f_name = first.getText();
            String l_name = last.getText();
            Date birth = Date.valueOf(dob.getText());
            String s = sex.getText();
            int mal = Integer.parseInt(malaria.getText());
            int mea = Integer.parseInt(measles.getText());
            int dpts = Integer.parseInt(dpt.getText());
            Date schedule =  Date.valueOf(next.getText());

            // call IISystem's register function
            iis.register(f_name, l_name, birth, s, mal, mea, dpts, schedule);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Patient already exist OR wrong input",
                    "ERROR", JOptionPane.ERROR_MESSAGE);

            System.err.println(e.getClass().getName() + ": " + e.getMessage());
        }
    }

    /*
     * Take user input in Text-Field and call update function
     * To execute the update query
     */
    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // get all text input from Graphic User Interface
            String f_name = first.getText();
            String l_name = last.getText();
            Date birth = Date.valueOf(dob.getText());
            String s = sex.getText();
            int mal = Integer.parseInt(malaria.getText());
            int mea = Integer.parseInt(measles.getText());
            int dpts = Integer.parseInt(dpt.getText());
            Date schedule;

            // handle case that there is no next schedule for patient
            // who completed all immunization
            if (next.getText().equals("COMPLETE")) {
                System.out.println("HERE");
                schedule = Date.valueOf("2000-01-01");
            } else {
                System.out.println("here");
                schedule = Date.valueOf(next.getText());
            }
            // call IISystem's update function
            iis.update(f_name, l_name, birth, s, mal, mea, dpts, schedule);

        } catch (Exception e) {
            System.err.println(e.getClass().getName() + ": " + e.getMessage());
        }
    }

    /*
     * Take user input in Text-Field and call search function
     * To execute the search query
     */
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
        // search option is PERSON
        if (searchOption.getSelectedItem() == "PERSON") {
            String f_name = first.getText();
            String l_name = last.getText();
            Date birth = Date.valueOf(dob.getText());

            // call search function
            ResultSet rs = iis.patientInfo(f_name, l_name, birth);

            // display the result on GUI
            while (rs.next()) {
                first.setText(rs.getString("f_name"));
                last.setText(rs.getString("l_name"));
                dob.setText(rs.getDate("birth").toString());
                sex.setText(rs.getString("sex"));
                malaria.setText(String.valueOf(rs.getBoolean("malaria") ? 1 : 0));
                measles.setText(String.valueOf(rs.getBoolean("measles") ? 1 : 0));
                dpt.setText(String.valueOf(rs.getBoolean("dpt") ? 1 : 0));
                if (rs.getBoolean("malaria") == true &&
                        rs.getBoolean("measles") == true &&
                        rs.getBoolean("dpt") == true) {
                    next.setText("COMPLETE");
                } else {
                    next.setText(rs.getDate("schedule").toString());
                }
            }

        // Search option is OVERDUE
        } else if (searchOption.getSelectedItem().equals("OVERDUE")) {
            clearPerson();
            ResultSet rs = iis.searchOverdue();
            // list to display on the right panel
            DefaultListModel listIncomplete = new DefaultListModel();

            // display the list
            while (rs.next()) {
                Boolean mal = rs.getBoolean("malaria");
                Boolean mea = rs.getBoolean("measles");
                Boolean dpt = rs.getBoolean("dpt");

                String str = rs.getString("f_name") + " " +
                        rs.getString("l_name") + " " +
                        rs.getDate("birth").toString() + " |";

                if (mal == false) {
                    str += " MALA";
                }
                if (mea == false) {
                    str += " MEAS";
                }
                if (dpt == false) {
                    str += " DPT";
                }
                listIncomplete.addElement(str);
            }
            resultList.setModel(listIncomplete);

        // Search option is INCOMPLETE MALARIA
        } else if (searchOption.getSelectedItem().equals("INCOMPLETE MALARIA")) {
            clearPerson();
            // call search incomplete malaria
            ResultSet rs = iis.incompleteMalaria();
            // list to display on the right panel
            DefaultListModel listIncomplete = new DefaultListModel();

            // display the list on the GUI
            while (rs.next()) {
                String str = rs.getString("f_name") + " " +
                        rs.getString("l_name") + " " +
                        rs.getDate("birth").toString();

                listIncomplete.addElement(str);
            }
            resultList.setModel(listIncomplete);

        // Search option is INCOMPLETE MEASLES
        } else if (searchOption.getSelectedItem().equals("INCOMPLETE MEASLES")) {
            clearPerson();
            // call search incomplete malaria
            ResultSet rs = iis.incompleteMeasles();
            // list to display on the right panel
            DefaultListModel listIncomplete = new DefaultListModel();

            while (rs.next()) {
                String str = rs.getString("f_name") + " " +
                        rs.getString("l_name") + " " +
                        rs.getDate("birth").toString();

                listIncomplete.addElement(str);
            }
            resultList.setModel(listIncomplete);

        // Search option is INCOMPLETE DPT
        } else {
            clearPerson();
            // call search incomplete DPT
            ResultSet rs = iis.incompleteDPT();
            // list to display on the right panel
            DefaultListModel listIncomplete = new DefaultListModel();

            // display the list on the GUI
            while (rs.next()) {
                String str = rs.getString("f_name") + " " +
                        rs.getString("l_name") + " " +
                        rs.getDate("birth").toString();

                listIncomplete.addElement(str);
            }
            resultList.setModel(listIncomplete);
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel DPT;
    private javax.swing.JLabel FIRST;
    private javax.swing.JLabel LAST;
    private javax.swing.JLabel MALARIA;
    private javax.swing.JLabel MEASLES;
    private javax.swing.JLabel NEXTSCHEDULE;
    private javax.swing.JLabel SEX;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JTextField dob;
    private javax.swing.JTextField dpt;
    private javax.swing.JTextField first;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField last;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel mainLabel;
    private javax.swing.JTextField malaria;
    private javax.swing.JTextField measles;
    private javax.swing.JTextField next;
    private javax.swing.JButton regiButton;
    private javax.swing.JList<String> resultList;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchOption;
    private javax.swing.JTextField sex;
    private javax.swing.JButton updateButton;
    // End of variables declaration
}
